"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getManifest = void 0;
const system_access_1 = require("@sap-ux/system-access");
const axios_extension_1 = require("@sap-ux/axios-extension");
/**
 * Get the application manifest.
 *
 * @param {string} appId - The application id.
 * @param {AdpPreviewConfig} adpConfig - The ADP configuration.
 * @param {ToolsLogger} logger - The logger.
 * @returns {Promise<Manifest>} The manifest.
 */
async function getManifest(appId, adpConfig, logger) {
    const provider = await (0, system_access_1.createAbapServiceProvider)(adpConfig.target, {
        ignoreCertErrors: adpConfig.ignoreCertErrors ?? false
    }, true, logger);
    const appInfo = (await provider.getAppIndex().getAppInfo(appId))[appId];
    const manifestUrl = appInfo.manifestUrl ?? appInfo.manifest;
    if (!manifestUrl) {
        throw new Error('Manifest URL not found');
    }
    try {
        const response = await provider.get(manifestUrl);
        return JSON.parse(response.data);
    }
    catch (error) {
        if ((0, axios_extension_1.isAxiosError)(error)) {
            logger.error('Manifest fetching failed');
        }
        else {
            logger.error('Manifest parsing error: Manifest is not in expected format.');
        }
        logger.debug(error);
        throw error;
    }
}
exports.getManifest = getManifest;
//# sourceMappingURL=abap.js.map