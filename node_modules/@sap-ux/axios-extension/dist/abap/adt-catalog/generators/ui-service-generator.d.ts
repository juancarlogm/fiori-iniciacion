import type { GeneratorEntry } from './types';
import type { BusinessObject, ValidationResponse } from '../../types';
import { AdtService } from '../services';
/**
 *
 */
export declare class UiServiceGenerator extends AdtService {
    protected bo: BusinessObject;
    /**
     * Configure the UI service generator.
     *
     * @param _config - The generator configuration.
     * @param bo - The business object.
     */
    configure(_config: GeneratorEntry, bo: BusinessObject): void;
    /**
     * Get the schema of the service binding.
     *
     * @returns The schema of the service binding.
     */
    getSchema(): Promise<any>;
    /**
     * Get the content of the service binding.
     *
     * @param pckg - The package name.
     * @returns The content of the service binding.
     */
    getContent(pckg: string): Promise<string>;
    /**
     * Validate the package before generation.
     *
     * @param pckg - The package to be validated.
     * @returns The response of the validation.
     */
    validatePackage(pckg: string): Promise<any>;
    /**
     * Validate the service content and package before generation.
     *
     * @param content - The content to be validated.
     * @returns The response of the validation.
     */
    validateContent(content: string): Promise<ValidationResponse>;
    /**
     * Generate the service binding.
     *
     * @param content - The content of the service binding.
     * @param transport - The transport.
     * @returns The object references.
     */
    generate(content: string, transport: string): Promise<unknown>;
}
//# sourceMappingURL=ui-service-generator.d.ts.map